{"version":3,"file":"blocks/search-form/index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAKA;AACA;AACA;AACA;AAEAA,oEAAiB,CAACK,6CAAD,EAAa;EAC5BG,IAAI,EAAEF,0IADsB;;EAE5BI,IAAI,OAAgC;IAAA,IAA/B;MAAEC,UAAF;MAAcC;IAAd,CAA+B;IAClC,MAAM;MAAEC,OAAF;MAAWC;IAAX,IAAyBH,UAA/B;IACA,MAAMI,UAAU,GAAGd,sEAAa,CAAC;MAC/Be,KAAK,EAAE;QACL,oBAAoBH,OADf;QAELI,KAAK,EAAEH;MAFF;IADwB,CAAD,CAAhC;IAMA,OACE,kIACE,kEAAC,sEAAD,QACE,kEAAC,uEAAD;MACE,KAAK,EAAEV,mDAAE,CAAC,QAAD,EAAW,YAAX,CADX;MAEE,aAAa,EAAE,CACb;QACEc,KAAK,EAAEd,mDAAE,CAAC,kBAAD,EAAqB,YAArB,CADX;QAEEe,KAAK,EAAEN,OAFT;QAGEO,QAAQ,EAAGC,QAAD,IAAcT,aAAa,CAAC;UAAEC,OAAO,EAAEQ;QAAX,CAAD;MAHvC,CADa,EAMb;QACEH,KAAK,EAAEd,mDAAE,CAAC,YAAD,EAAe,YAAf,CADX;QAEEe,KAAK,EAAEL,SAFT;QAGEM,QAAQ,EAAGC,QAAD,IAAcT,aAAa,CAAC;UAAEE,SAAS,EAAEO;QAAb,CAAD;MAHvC,CANa;IAFjB,EADF,CADF,EAkBE,yEAASN,UAAT,EACE,8GADF,EAEE,gFACE;MAAO,IAAI,EAAC,MAAZ;MAAmB,WAAW,EAAC;IAA/B,EADF,EAEE;MAAK,SAAS,EAAC;IAAf,GACE;MACE,IAAI,EAAC,QADP;MAEE,KAAK,EAAE;QACL,oBAAoBF,OADf;QAELI,KAAK,EAAEH;MAFF;IAFT,YADF,CAFF,CAFF,CAlBF,CADF;EAsCD;;AAhD2B,CAAb,CAAjB,C","sources":["webpack://udemy-plus/./src/blocks/search-form/main.css?c89e","webpack://udemy-plus/external window [\"wp\",\"blockEditor\"]","webpack://udemy-plus/external window [\"wp\",\"blocks\"]","webpack://udemy-plus/external window [\"wp\",\"element\"]","webpack://udemy-plus/external window [\"wp\",\"i18n\"]","webpack://udemy-plus/webpack/bootstrap","webpack://udemy-plus/webpack/runtime/make namespace object","webpack://udemy-plus/./src/blocks/search-form/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks'\r\nimport {\r\n  useBlockProps,\r\n  PanelColorSettings,\r\n  InspectorControls,\r\n} from '@wordpress/block-editor'\r\nimport { __ } from '@wordpress/i18n'\r\nimport block from './block.json'\r\nimport icons from '../../icons'\r\nimport './main.css'\r\n\r\nregisterBlockType(block.name, {\r\n  icon: icons.primary,\r\n  edit({ attributes, setAttributes }) {\r\n    const { bgColor, textColor } = attributes\r\n    const blockProps = useBlockProps({\r\n      style: {\r\n        'background-color': bgColor,\r\n        color: textColor,\r\n      },\r\n    })\r\n    return (\r\n      <>\r\n        <InspectorControls>\r\n          <PanelColorSettings\r\n            title={__('Colors', 'udemy-plus')}\r\n            colorSettings={[\r\n              {\r\n                label: __('Background Color', 'udemy-plus'),\r\n                value: bgColor,\r\n                onChange: (newValue) => setAttributes({ bgColor: newValue }),\r\n              },\r\n              {\r\n                label: __('Text Color', 'udemy-plus'),\r\n                value: textColor,\r\n                onChange: (newValue) => setAttributes({ textColor: newValue }),\r\n              },\r\n            ]}\r\n          />\r\n        </InspectorControls>\r\n        <div {...blockProps}>\r\n          <h1>Search: Your search term here</h1>\r\n          <form>\r\n            <input type='text' placeholder='Search' />\r\n            <div className='btn-wrapper'>\r\n              <button\r\n                type='submit'\r\n                style={{\r\n                  'background-color': bgColor,\r\n                  color: textColor,\r\n                }}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </>\r\n    )\r\n  },\r\n})\r\n"],"names":["registerBlockType","useBlockProps","PanelColorSettings","InspectorControls","__","block","icons","name","icon","primary","edit","attributes","setAttributes","bgColor","textColor","blockProps","style","color","label","value","onChange","newValue"],"sourceRoot":""}